binary: main
build_commit: 947f64f
build_number: 1523
cpu_has_arm_fma: true
cpu_has_avx: false
cpu_has_avx2: false
cpu_has_avx512: false
cpu_has_avx512_vbmi: false
cpu_has_avx512_vnni: false
cpu_has_blas: true
cpu_has_cublas: false
cpu_has_clblast: false
cpu_has_fma: false
cpu_has_gpublas: false
cpu_has_neon: true
cpu_has_f16c: false
cpu_has_fp16_va: true
cpu_has_wasm_simd: false
cpu_has_blas: true
cpu_has_sse3: false
cpu_has_vsx: false
debug: false
model_desc: stablelm 3B mostly F16 (guessed)
n_vocab: 50304  # output size of the final layer, 32001 for some models
optimize: true
time: 2024_01_31-21_36_00.1604411400

###############
# User Inputs #
###############

alias: unknown # default: unknown
batch_size: 512 # default: 512
cfg_negative_prompt:
cfg_scale: 1.000000 # default: 1.0
chunks: -1 # default: -1 (unlimited)
color: false # default: false
ctx_size: 512 # default: 512
escape: false # default: false
file: # never logged, see prompt instead. Can still be specified for input.
frequency_penalty: 0.000000 # default: 0.0 
grammar:
grammar-file: # never logged, see grammar instead. Can still be specified for input.
hellaswag: false # default: false
hellaswag_tasks: 400 # default: 400
ignore_eos: false # default: false
in_prefix:
in_prefix_bos: false # default: false
in_suffix:
instruct: false # default: false
interactive: false # default: false
interactive_first: false # default: false
keep: 0 # default: 0
logdir: /Users/zhangyadong/jeffproject/AthenaCoder/extensions/athenacoder/resources/ # default: unset (no logging)
logit_bias:
lora:
lora_scaled:
lora_base: 
main_gpu: 0 # default: 0
memory_f32: false # default: false
mirostat: 0 # default: 0 (disabled)
mirostat_ent: 5.000000 # default: 5.0
mirostat_lr: 0.100000 # default: 0.1
mlock: false # default: false
model: /Users/zhangyadong/jeffproject/AthenaCoder/extensions/athenacoder/resources/main/stable-code-3b.gguf # default: models/7B/ggml-model.bin
model_draft:  # default:
multiline_input: false # default: false
n_gpu_layers: -1 # default: -1
n_predict: -1 # default: -1 (unlimited)
n_probs: 0 # only used by server binary, default: 0
no_mmap: false # default: false
no_mul_mat_q: false # default: false
no_penalize_nl: false # default: false
numa: false # default: false
ppl_output_type: 0 # default: 0
ppl_stride: 0 # default: 0
presence_penalty: 0.000000 # default: 0.0
prompt: write a bubble sort in c
prompt_cache: 
prompt_cache_all: false # default: false
prompt_cache_ro: false # default: false
prompt_tokens: [6343, 247, 19251, 3686, 275, 260]
random_prompt: false # default: false
repeat_penalty: 1.100000 # default: 1.1
reverse_prompt:
rope_freq_base: 0.000000 # default: 10000.0
rope_freq_scale: 0.000000 # default: 1.0
seed: 1706708138 # default: -1 (random seed)
simple_io: false # default: false
cont_batching: false # default: false
temp: 0.800000 # default: 0.8
tensor_split: [0.000000e+00]
tfs: 1.000000 # default: 1.0
threads: 4 # default: 8
top_k: 40 # default: 40
top_p: 0.950000 # default: 0.95
min_p: 0.050000 # default: 0.0
typical_p: 1.000000 # default: 1.0
verbose_prompt: false # default: false

######################
# Generation Results #
######################

output: ".\n\nAuthor: -9996\n*/\n/* C standard headers */\n#include <stdio.h>\n#include <stdlib.h>\n\nvoid swap(int *a, int *b);\nvoid bubblesort(int *array, int n));\n\n/**\n* \brief Swap the contents of two elements\n* \param a An integer value that will be swapped with b\n* \param b An integer value that will be swapped with a\n*/\nvoid swap(int *a, int *b) {\n	printf(\"in swap\");\n	if (*a != *b)) {\n		// printf(\"hi im in swap\n\");\n\n		(*a) = (*a ^ (*b))); // xor is the basic operator used to swap elements.\n\n(*b) = (*a ^ (*b)))))))\n\n			printf(\"\nafter swap: \");\n			for (i=0; i<5; i++) {\n				// printf(\"%d \", array[i]));\n\n				}\n			}\n"
output_tokens: [15, 535, 50275, 14897, 27, 428, 1525, 4196, 187, 8480, 187, 3122, 330, 2629, 20546, 1738, 187, 4, 3709, 654, 43930, 15, 73, 31, 187, 4, 3709, 654, 49533, 15, 73, 31, 187, 187, 4353, 22101, 9, 565, 475, 66, 13, 540, 475, 67, 558, 187, 4353, 27892, 430, 9, 565, 475, 3728, 13, 540, 295, 4027, 187, 187, 6930, 187, 50276, 11, 393, 18399, 4235, 522, 253, 9410, 273, 767, 3603, 187, 50276, 11, 393, 3575, 247, 743, 7007, 1318, 326, 588, 320, 1863, 6965, 342, 270, 187, 50276, 11, 393, 3575, 270, 743, 7007, 1318, 326, 588, 320, 1863, 6965, 342, 247, 187, 8480, 187, 4353, 22101, 9, 565, 475, 66, 13, 540, 475, 67, 10, 551, 187, 186, 13108, 1587, 249, 22101, 3287, 187, 186, 338, 2796, 66, 3613, 475, 67, 1228, 551, 996, 186, 605, 20275, 1587, 5801, 516, 275, 22101, 61, 79, 3287, 6886, 186, 9672, 66, 10, 426, 2796, 66, 5042, 2796, 67, 23090, 1380, 1269, 263, 310, 253, 5044, 5572, 908, 281, 22101, 3603, 15, 535, 50270, 9672, 67, 10, 426, 2796, 66, 5042, 2796, 67, 27483, 10689, 11866, 186, 13108, 30094, 2072, 699, 22101, 27, 33051, 988, 186, 1542, 313, 74, 30, 17, 28, 891, 29, 22, 28, 891, 9234, 551, 2657, 186, 605, 20275, 22219, 69, 18873, 3781, 60, 74, 49236, 28122, 186, 94, 988, 186, 94, 187, 0]

###########
# Timings #
###########

mst_eval: 71.38  # ms / token during generation
mst_p_eval: 14.77  # ms / token during prompt processing
mst_sample: 0.14  # ms / token during sampling
n_eval: 227  # number of tokens generated (excluding the first one)
n_p_eval: 6  # number of tokens processed in batches at the beginning
n_sample: 228  # number of sampled tokens
t_eval_us: 16202178  # total microseconds spent generating tokens
t_load_us: 5944740  # total microseconds spent loading the model
t_p_eval_us: 88610  # total microseconds spent prompt processing
t_sample_us: 31548  # total microseconds spent sampling
ts_eval: 14.01  # tokens / second during generation
ts_p_eval: 67.71  # tokens / second during prompt processing
ts_sample: 7227.08  # tokens / second during sampling
